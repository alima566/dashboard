<%- include('../blocks/header', {bot, user, path, creator}) %>
<div class="container">
    <h2>Member List</h2>
</div>

<table class="table table-hover table-bordered" width="100%" id="membersList">
    <thead class="thead-default">
        <tr>
            <th style="width: 20%">Display Name</th>
            <th>User Tag + ID</th>
            <th style="width: 20%">Joined</th>
            <th>Roles</th>
        </tr>
    </thead>
    <tbody>
        <% guild.members.cache.forEach(member => { %>
            <tr>
                <td>
                    <img src="<%= member.user.displayAvatarURL({ dynamic: true, size: 32 }) %>"
                        class="d-inline-block align-middle rounded-circle" alt="<%= member.user.tag %>">&nbsp;
                    <a href="#" data-toggle="modal" data-target="#<%= `${member.displayName}` %>Modal">
                        <span style="color:<%= member.roles.highest.hexColor === '#000000' ? '#FFFFFF' : member.roles.highest.hexColor %>">
                            <%= member.displayName %>
                        </span>
                    </a>
                    <% if (member.user.bot) { %>&nbsp;<img src="/public/bot.png" /><% } %>
                </td>
                <td><%= member.user.tag %><br>(<%= member.id %>)</td>
                <td class="joinedAt">
                    <%= member.joinedTimestamp %>
                </td>
                <td class="roles"><%= member.roles.cache.filter(r=> r.id !== guild.id ).map(r => r.name).join(", ")%>
                </td>
            </tr>
            <!-- Modal -->
            <div id="<%= `${member.displayName}` %>Modal" class="modal fade" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header btn-info disabled">
                            <h4 class="modal-title">
                                <img src="<%= member.user.displayAvatarURL({ dynamic: true, size: 32 }) %>"
                                    class="d-inline-block align-middle rounded-circle" alt="<%= member.user.tag %>">&nbsp;<%= member.user.tag %>
                            </h4>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-2">
                                    <img src="<%= member.user.displayAvatarURL({ dynamic: true, size: 128 }) %>" alt="<%= member.user.username %>"
                                        title="<%= member.user.username %>">
                                </div>
                            </div>
                        </div>
                        <div class=" modal-footer">
                            <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>

        <% }) %>
    </tbody>
</table>

<script type="text/javascript">
    moment.tz.add("America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6");
    $('.joinedAt').each((index, element) => {
        const ts = parseInt($(element).text());
        $(element).html(moment.tz(ts, "America/New_York").format('MMM D YYYY h:mm A z'))
    })

    const guildID = "<%= guild.id %>";
    const pages = {
        total: null,
        current: null,
        elements: null,
        limit: 50,
        sortby: null,
        inverted: false,
        filter: null
    };
    
    const hexToRgb = (hex) => {
        const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        return result ? {
            r: parseInt(result[1], 16),
            g: parseInt(result[2], 16),
            b: parseInt(result[3], 16)
        } : null;
    }

    const getMembers = (start, callback) => {
        $.getJSON(`/dashboard/${guildID}/members/list?start=${start}&limit=${pages.limit}&sortby=${pages.sortby}&filter=${pages.filter}`, (response) => {
            pages.total = response.pageof;
            pages.current = response.page;
            pages.elements = response.total;
            callback(response);
        });
    }

    const updateTable = (members) => {
        moment.tz.add("America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6");

        $("table tbody").empty();
        for (let i = 0; i < members.length; i++) {
            member = members[i];
            let color = member.highestRole.hexColor === "#000000" ? '#FFFFFF' : member.highestRole.hexColor;
            let roles = member.roles.filter(r => r.name !== "@everyone").map(r => {
                let rc = r.hexColor === "#000000" ? { r: 255, g: 255, b: 255 } : hexToRgb(r.hexColor);
                return `<span class="roleBox" style="color: rgb(${rc.r}, ${rc.g}, ${rc.b}); background-color: rgba(${rc.r}, ${rc.g}, ${rc.b}, 0.0980392); border: 1px solid rgba(${rc.r}, ${rc.g}, ${rc.b}, 0.498039);">${r.name}</span>`;
            }).join(" ");
            let thishtml = snippet
                .replace(/\{color\}/g, color)
                .replace("{displayName}", member.displayName)
                .replace("{status}", member.status)
                .replace("{tag}", member.tag)
                .replace("{id}", member.id)
                .replace("{joined}", moment.tz(member.joinedAt, "America/New_York").format("ddd, MMM D, YYYY h:mm A z"))
                .replace("{roles}", roles);
            thishtml = member.bot ? thishtml.replace("{botimg}", ' <img src="/public/bot.png">') : thishtml.replace("{botimg}", '');
            $('table > tbody').append(thishtml);
        };
    }

    const changePage = (page) => {
        const start = page * pages.limit;
        pages.current = page;
        getMembers(start, (data) => {
            updateTable(data.members);
        })
    }

    const drawPagination = () => {
        $('.pagination').empty();
        $('.pagination').append('<li class="page-item active"><a class="page-link" href="#" data-pagenum="1">1</a></li>')
        for (let i = 1; i < pages.total; i++) {
            let strItem = '<li class="page-item"><a class="page-link" href="#" data-pagenum="' + (i + 1) + '">' + (i + 1) + '</a></li>';
            $('.pagination').append(strItem);
        }
        $('.page-link').click((e) => {
            e.preventDefault();
            $(this).parent().addClass('active');
            $('.pagination').find('.active').removeClass('active');
            changePage($(this).attr('data-pagenum'));
            return false;
        });
    }
    const snippet = `    <tr>
      <td style="color:{color}"><span class="status {status}"></span> {displayName}{botimg}</td>
      <td style="color:{color}">{tag}<br/>({id})</td>
      <td style="color:{color}">{joined}</td>
      <td>{roles}</td>
    </tr>`;
    const roleSnippet = '<span style="color:{color}">{name}</span>';

    $(document).ready(() => {
        // getMembers(0, (data) => {
        //     pages.current = data.page;
        //     updateTable(data.members);
        //     drawPagination();
        // });
        $('#membersList').DataTable({
            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
            pageLength: 50,
            columnDefs: [{
                orderable: false,
                targets: 3
            }],
            language: {
                lengthMenu: "Show _MENU_ members",
                info:  "Showing _START_ to _END_ of _TOTAL_ member(s)",
                infoFiltered: " (filtered from _MAX_ members)"
            }
        })
    });

    $("#show-members").change(() => {
        pages.limit = this.value;
        getMembers(0, (data)=> {
            updateTable(data.members);
            drawPagination();
        });
    });

    $("#sort-by").change(() => {
        pages.sortby = this.value;
        getMembers(pages.current, (data) => {
            updateTable(data.members);
            drawPagination();
        });
    });

    let typingTimer;                //timer identifier
    let doneTypingInterval = 1000;  //time in ms (5 seconds)
    $('#display-name-search').keyup(() => {
        clearTimeout(typingTimer);
        pages.filter = $('#display-name-search').val() ? $('#display-name-search').val() : null
        typingTimer = setTimeout(doneTyping, doneTypingInterval);
    });

    const doneTyping = () => {
        getMembers(0, (data) => {
            updateTable(data.members);
            drawPagination();
        });
    }
</script>
<%- include('../blocks/footer', {bot, user, path, creator}) %>